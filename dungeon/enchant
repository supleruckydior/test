local ReplicatedFirst = game:GetService('ReplicatedFirst')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local TNet = require(ReplicatedFirst.Component.TNet)
local Config = require(ReplicatedStorage:WaitForChild('Config'))

local EQUIP_ID = 13370 -- 装备ID
local MAX_ENCHANT_COUNT = 200 -- 最大附魔次数
local CURRENT_COUNT = 0 -- 当前附魔次数

-- 配置：你需要的目标词条ID列表
local TARGET_AFFIX_IDS = {
    --141050401, -- 替换为你需要的词条ID
    --141060401, -- 替换为你需要的词条ID
    --141060005,
    --141060405,
    141060006,
    141060009,
    --141060008, -- 添加更多需要的词条ID
}

-- 配置：初始锁定的位置（比如锁定已有的好词条）
local INITIAL_LOCKED_SLOTS = { 2 } -- 初始锁定第2和第3个位置

-- 保存当前附魔结果的函数（使用FireServer）
local function saveCurrentEnchant()
    print('💾 保存当前附魔结果...')
    TNet.FireServer('UseNewEquipmentAffixGroup', EQUIP_ID)
    print('✅ 保存请求已发送')
end

-- 附魔ID到描述的函数
local function getEnchantDescription(enchantId)
    if
        Config
        and Config.Affix
        and Config.Affix.Attribute
        and Config.Affix.Attribute[enchantId]
    then
        local enchantData = Config.Affix.Attribute[enchantId]
        return enchantData.description or '未知附魔'
    end
    return '未找到附魔ID: ' .. tostring(enchantId)
end

-- 检查词条是否在目标列表中
local function isTargetAffix(affixId)
    for _, targetId in ipairs(TARGET_AFFIX_IDS) do
        if affixId == targetId then
            return true
        end
    end
    return false
end

-- 检查是否达到完美附魔（所有目标词条都出现）
local function isPerfectEnchant(affixes)
    local targetCount = 0
    for _, affixId in ipairs(affixes) do
        if isTargetAffix(affixId) then
            targetCount = targetCount + 1
        end
    end
    return targetCount >= #affixes -- 所有目标词条都出现
end

-- 检查是否有新的目标词条出现（只检查未被锁定的位置）
local function hasNewTargetAffix(affixes, previouslyLockedSlots)
    for slot, affixId in ipairs(affixes) do
        -- 只检查未被锁定的位置
        local isLocked = false
        for _, lockedSlot in ipairs(previouslyLockedSlots) do
            if lockedSlot == slot then
                isLocked = true
                break
            end
        end

        -- 如果这个位置没有被锁定，并且有目标词条，才返回true
        if not isLocked and isTargetAffix(affixId) then
            return true
        end
    end
    return false
end

-- 分析附魔结果并决定下一次要锁定的位置
local function analyzeEnchantResult(affixes, previouslyLockedSlots)
    local currentLockedSlots = {}
    local foundTargetSlots = {}

    -- 首先保留之前锁定的位置
    for _, slot in ipairs(previouslyLockedSlots) do
        if slot <= #affixes then
            table.insert(currentLockedSlots, slot)
        end
    end

    -- 检查每个位置的词条，如果是目标词条就锁定（只检查未被锁定的位置）
    for slot, affixId in ipairs(affixes) do
        -- 检查这个位置是否已经被锁定
        local alreadyLocked = false
        for _, lockedSlot in ipairs(currentLockedSlots) do
            if lockedSlot == slot then
                alreadyLocked = true
                break
            end
        end

        -- 如果这个位置没有被锁定，并且有目标词条，就加入锁定列表
        if not alreadyLocked and isTargetAffix(affixId) then
            table.insert(currentLockedSlots, slot)
            table.insert(foundTargetSlots, slot)
        end
    end

    -- 对锁定位置进行排序
    table.sort(currentLockedSlots)

    return currentLockedSlots, foundTargetSlots
end

local function performEnchant(lockedSlots)
    CURRENT_COUNT = CURRENT_COUNT + 1

    if CURRENT_COUNT > MAX_ENCHANT_COUNT then
        print(
            string.format(
                '已达到最大附魔次数 %d 次，停止附魔',
                MAX_ENCHANT_COUNT
            )
        )
        return
    end

    print(
        string.format(
            '进行附魔，锁定位置: %s',
            table.concat(lockedSlots, ', ')
        )
    )
    print(
        string.format(
            '当前附魔次数: %d/%d',
            CURRENT_COUNT,
            MAX_ENCHANT_COUNT
        )
    )

    TNet.InvokeServer('Equipment_Enchant', 5, function(success, ...)
        local results = { ... }

        if success and #results > 0 and typeof(results[1]) == 'table' then
            local affixes = results[1]
            local maxSlots = #affixes -- ✅ 装备最大词条数

            -- 打印附魔结果
            for i, affixId in ipairs(affixes) do
                local description = getEnchantDescription(affixId)
                local status = '❌'
                local isTarget = isTargetAffix(affixId)

                for _, lockedSlot in ipairs(lockedSlots) do
                    if lockedSlot == i then
                        status = '🔒'
                        break
                    end
                end

                if isTarget then
                    status = status .. '🎯'
                end

                print(
                    string.format(
                        '  %s 位置%d: %s (%d)',
                        status,
                        i,
                        description,
                        affixId
                    )
                )
            end

            -- ✅ 新增：如果已锁定数 == 词条数，直接停止
            if #lockedSlots >= maxSlots then
                print(
                    string.format(
                        '🔒 已锁定 %d/%d 个位置，附魔完成，自动停止',
                        #lockedSlots,
                        maxSlots
                    )
                )
                saveCurrentEnchant()
                return
            end

            -- 检查是否有新的目标词条
            if hasNewTargetAffix(affixes, lockedSlots) then
                print(
                    '🎯 发现新的目标词条，自动保存当前结果'
                )
                saveCurrentEnchant()
                wait(1)
            end

            -- 检查完美附魔
            if isPerfectEnchant(affixes) then
                print('🎉 达到完美附魔！自动保存并停止')
                saveCurrentEnchant()
                return
            end

            -- 分析下一轮锁定
            local nextLockedSlots, foundTargets =
                analyzeEnchantResult(affixes, lockedSlots)

            if #foundTargets > 0 then
                print(
                    '🎯 发现目标词条，自动锁定位置:',
                    table.concat(foundTargets, ', ')
                )
            end

            -- ✅ 再检查一次，避免死循环
            if #nextLockedSlots >= maxSlots then
                print(
                    string.format(
                        '🔒 已锁定 %d/%d 个位置，附魔完成，自动停止',
                        #nextLockedSlots,
                        maxSlots
                    )
                )
                saveCurrentEnchant()
                return
            end

            wait(0.03)
            performEnchant(nextLockedSlots)
        else
            print('附魔失败或返回数据异常')
            wait(0.03)
            performEnchant(lockedSlots)
        end
    end, EQUIP_ID, lockedSlots)
end

-- 手动保存函数
local function manualSave()
    print('🔄 手动保存当前附魔结果')
    saveCurrentEnchant()
end

-- 开始附魔
print('开始智能附魔...')
print('目标词条:')
for _, affixId in ipairs(TARGET_AFFIX_IDS) do
    local description = getEnchantDescription(affixId)
    print(string.format('  %d: %s', affixId, description))
end

print(string.format('最大附魔次数: %d', MAX_ENCHANT_COUNT))
print("输入 'manualSave()' 可以手动保存当前附魔结果")
performEnchant(INITIAL_LOCKED_SLOTS)
