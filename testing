local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local dataSyncEvent = ReplicatedStorage["\228\186\139\228\187\182"]["\229\174\162\230\136\183\231\171\175"]["\229\174\162\230\136\183\231\171\175\233\152\181\230\179\149"]["\233\152\181\230\179\149\230\149\176\230\141\174\229\143\152\229\140\150"]

dataSyncEvent.Event:Connect(function(data)
    local runesData = data["背包"]; local runesToSell = {}
    for _, rune in ipairs(runesData) do
        local index = rune["索引"]; local runeType = tonumber(rune["类型"]) or 0
        local attributes = rune["属性"]; local goldCount, critCount, expCount = 0, 0, 0
        for _, attribute in ipairs(attributes) do
            local name = attribute["名称"]
            if name == "金币额外获取" then goldCount = goldCount + 1
            elseif name == "暴击概率" then critCount = critCount + 1
            elseif name == "经验额外获取" then expCount = expCount + 1 end
        end
        if goldCount < 3 and expCount < 3 and critCount < 3 then
            table.insert(runesToSell, {index = index, type = runeType, gold = goldCount, exp = expCount, crit = critCount, reason = "三项不达标"})
        end
        if (runeType == 2 or runeType == 3 or runeType == 5) and critCount >= 3 and goldCount < 3 and expCount < 3 then
            local exists = false
            for _, r in ipairs(runesToSell) do if r.index == index then exists = true; break end end
            if not exists then
                table.insert(runesToSell, {index = index, type = runeType, gold = goldCount, exp = expCount, crit = critCount, reason = "类型"..runeType.."暴击过多"})
            end
        end
    end
    for _, rune in ipairs(runesToSell) do
        local args = {[1] = {[rune.index] = true}}
        game:GetService("ReplicatedStorage"):FindFirstChild("\228\186\139\228\187\182"):FindFirstChild("\229\133\172\231\148\168"):FindFirstChild("\233\152\181\230\179\149"):FindFirstChild("\229\135\186\229\148\174"):FireServer(unpack(args))
    end
end)
